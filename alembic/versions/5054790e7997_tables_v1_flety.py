"""tables v1 Flety

Revision ID: 5054790e7997
Revises: 
Create Date: 2022-06-08 12:11:05.388545

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "5054790e7997"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "generator",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("nit", sa.String(length=20), nullable=False),
        sa.Column("legal_papers_ok", sa.Boolean(), nullable=True),
        sa.Column("papers_expiration_date", sa.Date(), nullable=True),
        sa.Column("additional_info", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "subscription_plan",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("monthly_cost_COP", sa.Float(), nullable=False),
        sa.Column("loads_per_month", sa.Integer(), nullable=True),
        sa.Column("includes_analytics_module", sa.Boolean(), nullable=True),
        sa.Column("includes_tracking_module", sa.Boolean(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("benefits", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "transport_company",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("nit", sa.String(length=20), nullable=False),
        sa.Column("legal_papers_ok", sa.Boolean(), nullable=True),
        sa.Column("papers_expiration_date", sa.Date(), nullable=True),
        sa.Column("additional_info", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "vehicle_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("n_shafts", sa.Integer(), nullable=False),
        sa.Column("max_weight_kg", sa.Float(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("image_path", sa.String(length=200), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "truck_model",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("vehicle_type_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["vehicle_type_id"],
            ["vehicle_type.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("surnames", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column(
            "user_rol",
            sa.Enum(
                "admin",
                "conductor",
                "generador",
                "propietario",
                "empresa de transporte",
                name="user_rol",
            ),
            nullable=False,
        ),
        sa.Column("transport_company_id", sa.Integer(), nullable=True),
        sa.Column("generator_id", sa.Integer(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_superuser", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["generator_id"],
            ["generator.id"],
        ),
        sa.ForeignKeyConstraint(
            ["transport_company_id"],
            ["transport_company.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_table(
        "address",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("zipcode", sa.String(length=6), nullable=True),
        sa.Column("lat", sa.Float(), nullable=True),
        sa.Column("long", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_address_id"), "address", ["id"], unique=False)
    op.create_table(
        "contact",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("full_name", sa.String(length=100), nullable=False),
        sa.Column("phone", sa.String(length=15), nullable=False),
        sa.Column("email", sa.String(length=100), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "subscription",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("subscription_plan_id", sa.Integer(), nullable=True),
        sa.Column("subscription_start_date", sa.Date(), nullable=False),
        sa.Column("subscription_end_date", sa.Date(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["subscription_plan_id"],
            ["subscription_plan.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "vehicle",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column(
            "brand",
            sa.Enum("Kenworth", "International Eagle", name="brand"),
            nullable=False,
        ),
        sa.Column("driver_id", sa.Integer(), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=True),
        sa.Column("truck_model_id", sa.Integer(), nullable=False),
        sa.Column("model_year", sa.Integer(), nullable=False),
        sa.Column("license_plate", sa.String(length=10), nullable=False),
        sa.Column("soat_expiration_date", sa.Date(), nullable=True),
        sa.Column("color", sa.String(length=20), nullable=True),
        sa.ForeignKeyConstraint(
            ["driver_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["truck_model_id"],
            ["truck_model.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "load",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("assigned_generator_id", sa.Integer(), nullable=True),
        sa.Column("pick_up_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("origin_city", sa.String(length=50), nullable=False),
        sa.Column("origin_address_id", sa.Integer(), nullable=True),
        sa.Column("destiny_city", sa.String(length=50), nullable=False),
        sa.Column("destiny_address_id", sa.Integer(), nullable=True),
        sa.Column("contact_id", sa.Integer(), nullable=True),
        sa.Column("product_type", sa.String(length=50), nullable=False),
        sa.Column("requirements", sa.String(), nullable=True),
        sa.Column("vehicle_type_id", sa.Integer(), nullable=True),
        sa.Column(
            "load_type",
            sa.Enum("combustible", "big bags", name="load_type"),
            nullable=False,
        ),
        sa.Column(
            "trailer_type",
            sa.Enum("furg√≥n", "estacas", name="trailer_type"),
            nullable=False,
        ),
        sa.Column("weight_kg", sa.Float(), nullable=True),
        sa.Column("includes_loading", sa.Boolean(), nullable=False),
        sa.Column("loading_cost", sa.Float(), nullable=True),
        sa.Column("includes_unloading", sa.Boolean(), nullable=False),
        sa.Column("unloading_cost", sa.Float(), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("assigned_vehicle_id", sa.Integer(), nullable=True),
        sa.Column("assigned_company_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["assigned_company_id"],
            ["transport_company.id"],
        ),
        sa.ForeignKeyConstraint(
            ["assigned_generator_id"],
            ["generator.id"],
        ),
        sa.ForeignKeyConstraint(
            ["assigned_vehicle_id"],
            ["vehicle.id"],
        ),
        sa.ForeignKeyConstraint(
            ["contact_id"],
            ["contact.id"],
        ),
        sa.ForeignKeyConstraint(
            ["destiny_address_id"],
            ["address.id"],
        ),
        sa.ForeignKeyConstraint(
            ["origin_address_id"],
            ["address.id"],
        ),
        sa.ForeignKeyConstraint(
            ["vehicle_type_id"],
            ["vehicle_type.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_load_destiny_city"), "load", ["destiny_city"], unique=False
    )
    op.create_index(op.f("ix_load_id"), "load", ["id"], unique=False)
    op.create_index(op.f("ix_load_origin_city"), "load", ["origin_city"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_load_origin_city"), table_name="load")
    op.drop_index(op.f("ix_load_id"), table_name="load")
    op.drop_index(op.f("ix_load_destiny_city"), table_name="load")
    op.drop_table("load")
    op.drop_table("vehicle")
    op.drop_table("subscription")
    op.drop_table("contact")
    op.drop_index(op.f("ix_address_id"), table_name="address")
    op.drop_table("address")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_table("truck_model")
    op.drop_table("vehicle_type")
    op.drop_table("transport_company")
    op.drop_table("subscription_plan")
    op.drop_table("generator")
    # ### end Alembic commands ###
